# Example docker container management scenario

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes=2
packages=pacemaker corosync pcs docker
cluster_init=1
floating_ips=1

######################
# Deployment Scripts #
######################
= SCRIPTS =

##
# cleanup anything left over from previous run
##
target=all
....
# make sure docker services are up
service docker start

# clean up previous containers and images
docker stop httpd > /dev/null 2>&1
docker rm httpd > /dev/null 2>&1
docker rmi centos:custom_httpd > /dev/null 2>&1
rm -f /html_share/index.html
rm -rf Dockerfile entrypoint

....

##
# Initialize http index file.
# This index file is mounted within the container
##
target=all
....
mkdir -p /html_share
touch /html_share/index.html
cat << END >> /html_share/index.html
<html>
<body>My Test Site</body>
</html>
END
....

##
# Make docker images on both nodes for apache.
##
target=all
....
from="centos:centos7"
to="centos:custom_httpd"

docker pull "$from"
if [ $? -ne 0 ]; then
	echo "ERROR: failed to pull docker image $from"
	exit 1
fi

# create entry point for container
mkdir entrypoint
touch entrypoint/start.sh
chmod 755 entrypoint/start.sh
echo "#!/bin/bash" >> entrypoint/start.sh
echo "mkdir /run/httpd/" >> entrypoint/start.sh
echo "chown -R apache /run/httpd" >> entrypoint/start.sh
echo "chgrp -R apache /run/httpd" >> entrypoint/start.sh
echo "/usr/sbin/httpd -DFOREGROUND" >> entrypoint/start.sh

# Create Dockerfile for image creation.
echo "FROM $from" > Dockerfile
echo "RUN yum install -y wget httpd " >> Dockerfile
echo "ADD /entrypoint /root/" >> Dockerfile
echo "ENTRYPOINT /root/start.sh" >> Dockerfile

# build new image with apache in it from our base image.
docker build -t "$to" .
if [ $? -ne 0 ]; then
	echo "ERROR: failed to generate docker image"
	exit 1
fi

# cleanup
rm -rf Dockerfile entrypoint
....

##
# Make the cluster apache and floating ip resources
##
target=$PHD_ENV_nodes1
....
pcs resource create web-site docker image=centos:custom_httpd container=httpd run_opts="-p 80:80 -v /html_share:/var/www/html" --group web-group
pcs resource create web-ip ocf:heartbeat:IPaddr2 ip=$PHD_ENV_floating_ips1 --group web-group

phd_rsc_verify_start_all 60
....

##
# Verify connectivity to http via floating ip
##
target=all
....
wget ${PHD_ENV_floating_ips1}/index.html
if [ $? -ne 0 ]; then
	echo "ERROR: failed to contact httpd server"
	exit 1
fi
rm -f index.html
....
