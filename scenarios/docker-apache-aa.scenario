# Example docker container management scenario

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes=2
packages=pacemaker corosync pcs docker dlm gfs2 gfs2-utils lvm2-cluster lvm2
cluster_init=1
fence_cmd=1
floating_ips=1
shared_storage=1

######################
# Deployment Scripts #
######################
= SCRIPTS =

##
# cleanup anything left over from previous run
##
target=all
....
# make sure docker services are up
service docker start

# setup lvm for clustered management
lvmconf --enable-cluster

# clean up previous containers and images
docker stop httpd > /dev/null 2>&1
docker rm httpd > /dev/null 2>&1
docker rmi centos:custom_httpd > /dev/null 2>&1
rm -f /html_share/index.html
rm -rf Dockerfile entrypoint
....

##
# setup clvmd and dlm for clustered lvm management
##
target=$PHD_ENV_nodes1
....
tmpfile=mktemp
pcs resource defaults resource-stickiness=100
pcs cluster cib $tmpfile
pcs -f $tmpfile resource create dlm controld op monitor interval=30s on-fail=fence clone interleave=true ordered=true
pcs -f $tmpfile resource create clvmd ocf:heartbeat:clvm op monitor interval=30s on-fail=fence clone interleave=true ordered=true
pcs -f $tmpfile constraint order start dlm-clone then clvmd-clone
pcs -f $tmpfile constraint colocation add clvmd-clone with dlm-clone
pcs cluster cib-push $tmpfile

phd_wait_pidof "clvmd" 90
phd_rsc_verify_start_all 90
....

##
# Make the cluster storage volume group
##
target=$PHD_ENV_nodes1
....
dev=$PHD_ENV_shared_storage1

phd_rsc_verify_is_active_on clvmd-clone $PHD_ENV_nodes1 120

pvcreate -f $dev
vgcreate -cy cluster_vg $dev
echo "y" | lvcreate -L 512M -n cluster_lv cluster_vg
if [ $? -ne 0 ]; then
	echo "Failed to setup volume group"
	exit 1
fi
lvdisplay

mkfs.gfs2 -O -j4 -J 64 -p lock_dlm -t ${PHD_ENV_cluster_name}:gfs2-demo /dev/cluster_vg/cluster_lv
if [ $? -ne 0 ]; then
	echo "Failed to setup gfs2 filesystem"
	exit 1
fi
....

##
# Make the gfs2 resource clone
##
target=$PHD_ENV_nodes1
....
pcs cluster cib lvm-gfs2.cib
pcs -f lvm-gfs2.cib resource create gfs2 Filesystem device=/dev/cluster_vg/cluster_lv directory=/html_share fstype=gfs2 op monitor interval=10s on-fail=fence clone interleave=true
pcs -f lvm-gfs2.cib constraint order start clvmd-clone then gfs2-clone
pcs -f lvm-gfs2.cib constraint colocation add gfs2-clone with clvmd-clone
pcs cluster cib-push lvm-gfs2.cib

# Wait for all resources to start
phd_rsc_verify_start_all 60
....

##
# Initialize http index file.
# This index file is mounted within the container
##
target=$PHD_ENV_nodes1
....
mkdir -p /html_share
touch /html_share/index.html
cat << END >> /html_share/index.html
<html>
<body>My Test Site</body>
</html>
END
....

##
# Make docker images on both nodes for apache.
##
target=all
....
from="centos:centos7"
to="centos:custom_httpd"

docker pull "$from"
if [ $? -ne 0 ]; then
	echo "ERROR: failed to pull docker image $from"
	exit 1
fi

# create entry point for container
mkdir entrypoint
touch entrypoint/start.sh
chmod 755 entrypoint/start.sh
echo "#!/bin/bash" >> entrypoint/start.sh
echo "mkdir /run/httpd/" >> entrypoint/start.sh
echo "chown -R apache /run/httpd" >> entrypoint/start.sh
echo "chgrp -R apache /run/httpd" >> entrypoint/start.sh
echo "/usr/sbin/httpd -DFOREGROUND" >> entrypoint/start.sh

# Create Dockerfile for image creation.
echo "FROM $from" > Dockerfile
echo "RUN yum install -y wget httpd " >> Dockerfile
echo "ADD /entrypoint /root/" >> Dockerfile
echo "ENTRYPOINT /root/start.sh" >> Dockerfile

# build new image with apache in it from our base image.
docker build -t "$to" .
if [ $? -ne 0 ]; then
	echo "ERROR: failed to generate docker image"
	exit 1
fi

# cleanup
rm -rf Dockerfile entrypoint
....

##
# Make the cluster apache and floating ip resources
##
target=$PHD_ENV_nodes1
....

pcs cluster cib web-cfg

pcs -f web-cfg resource create web-ip ocf:heartbeat:IPaddr2 ip=$PHD_ENV_floating_ips1 --clone
pcs -f web-cfg resource create web-site docker image=centos:custom_httpd run_opts="-p ${PHD_ENV_floating_ips1}:80:80 -v /html_share:/var/www/html" --clone

pcs -f web-cfg constraint order start clvmd-clone then web-site-clone
pcs -f web-cfg constraint colocation add web-site-clone with clvmd-clone

pcs -f web-cfg constraint order start web-ip-clone then web-site-clone
pcs -f web-cfg constraint colocation add web-site-clone with web-ip-clone

pcs cluster cib-push web-cfg

phd_rsc_verify_start_all 60
....

##
# Verify connectivity to http via floating ip
##
target=all
....
rm -f index.html*
wget ${PHD_ENV_floating_ips1}/index.html
if [ $? -ne 0 ]; then
	echo "ERROR: failed to contact httpd server"
	exit 1
fi
rm -f index.html
....
